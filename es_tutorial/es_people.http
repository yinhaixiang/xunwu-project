
###  创建一个新的 people 索引，注意，将IP替换为你们自己的主机地址
PUT http://localhost:9200/people
Content-Type: application/json

{
  "settings": {
    "number_of_shards": 2,
    "number_of_replicas": 1
  },
  "mappings": {
    "properties": {
      "type": {
        "type": "keyword"
      },
      "name": {
        "type": "text"
      },
      "country": {
        "type": "keyword"
      },
      "age": {
        "type": "integer"
      },
      "date": {
        "type": "date",
        "format": "yyyy-MM-dd HH:mm:ss || yyyy-MM-dd || epoch_millis"
      }
    }
  }
}

###  向 people索引中插入一条  指定ID的数据，注意请求方式为 PUT
# 路径格式为 http://<ip>:<port>/<索引>/_doc/<文档ID>，下面我们插入了一条 ID 为 1 的数据
PUT http://localhost:9200/people/_doc/1
Content-Type: application/json

{
  "type": "man",
  "name": "Zereao",
  "country": "China",
  "age": "23",
  "date": "1995-11-27"
}

###  向 people索引中插入一条  自动生成ID的数据，注意，请求方式为 POST，并删除URL末尾的 ID
POST http://localhost:9200/people/_doc/
Content-Type: application/json

{
  "type": "man",
  "name": "AutoZereao",
  "country": "China",
  "age": "23",
  "date": "1995-11-27 12:25:35"
}

###  修改 ID 为 1 的文档的 name 字段值为 UpdateZereao，格式：{index}/_update/{id}
POST http://localhost:9200/people/_update/1/
Content-Type: application/json

{
  "doc": {
    "name": "UpdateZereao"
  }
}

###  删除 people索引中 ID = 1 的文档
DELETE http://localhost:9200/people/_doc/1/
Content-Type: application/json

###  删除 people 索引
DELETE http://localhost:9200/people
Content-Type: application/json

###  简单查询，查询 book 索引中，ID为1 的文档
GET http://localhost:9200/book/_doc/1
Content-Type: application/json

### 条件查询，查询所有数据
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "query": {
    "match_all": {}
  }
}

### 条件查询，指定返回数据大小以及从哪里开始返回
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "query": {
    "match_all": {}
  },
  "from": 1,
  "size": 1
}

### 条件查询，查询标题中包含 传 字的文档
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "query": {
    "match": {
      "title": "传"
    }
  }
}

### 条件查询，指定排序方式为 按照 publish_date 降序 排序
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "query": {
    "match": {
      "title": "传"
    }
  },
  "sort": [
    {
      "publish_date": {
        "order": "desc"
      }
    }
  ]
}

###   聚合查询，按照 这一批 book 的字数进行聚合；  这是一个单个分组聚合
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "aggs": {
    "group_by_word_count": {
      "terms": {
        "field": "word_count"
      }
    }
  }
}

###   聚合查询，按照 这一批 book 的字数和出版日期进行聚合；  这是一个多个分组聚合
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "aggs": {
    "group_by_word_count": {
      "terms": {
        "field": "word_count"
      }
    },
    "group_by_publish_date": {
      "terms": {
        "field": "publish_date"
      }
    }
  }
}

###   聚合查询，计算 word_count 字段的相关数据
POST http://localhost:9200/book/_search
Content-Type: application/json

{
  "aggs": {
    "grades_word_count": {
      "stats": {
        "field": "word_count"
      }
    }
  }
}

###
